<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xunqi.mapper.XqActivityMapper" >
  <resultMap id="BaseResultMap" type="com.xunqi.pojo.XqActivity" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="activity_id" property="activityId" jdbcType="INTEGER" />
    <result column="cover" property="cover" jdbcType="VARCHAR" />
    <result column="cover_hight" property="coverHight" jdbcType="VARCHAR" />
    <result column="cover_wight" property="coverWight" jdbcType="VARCHAR" />
    <result column="activity_title" property="activityTitle" jdbcType="VARCHAR" />
    <result column="price" property="price" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="full_address" property="fullAddress" jdbcType="VARCHAR" />
    <result column="lng" property="lng" jdbcType="DECIMAL" />
    <result column="lat" property="lat" jdbcType="DECIMAL" />
    <result column="activity_type" property="activityType" jdbcType="VARCHAR" />
    <result column="applicants_num" property="applicantsNum" jdbcType="INTEGER" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="activity_time" property="activityTime" jdbcType="VARCHAR" />
    <result column="start_time" property="startTime" jdbcType="VARCHAR" />
    <result column="end_time" property="endTime" jdbcType="VARCHAR" />
    <result column="is_certified" property="isCertified" jdbcType="INTEGER" />
    <result column="publisher" property="publisher" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, activity_id, cover, cover_hight, cover_wight, activity_title, price, address, 
    full_address, lng, lat, activity_type, applicants_num, state, activity_time, start_time, 
    end_time, is_certified, publisher, create_time, update_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.xunqi.pojo.XqActivityExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from xq_activity
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from xq_activity
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from xq_activity
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xunqi.pojo.XqActivityExample" >
    delete from xq_activity
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xunqi.pojo.XqActivity" >
    insert into xq_activity (id, activity_id, cover, 
      cover_hight, cover_wight, activity_title, 
      price, address, full_address, 
      lng, lat, activity_type, 
      applicants_num, state, activity_time, 
      start_time, end_time, is_certified, 
      publisher, create_time, update_time
      )
    values (#{id,jdbcType=INTEGER}, #{activityId,jdbcType=INTEGER}, #{cover,jdbcType=VARCHAR}, 
      #{coverHight,jdbcType=VARCHAR}, #{coverWight,jdbcType=VARCHAR}, #{activityTitle,jdbcType=VARCHAR}, 
      #{price,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, #{fullAddress,jdbcType=VARCHAR}, 
      #{lng,jdbcType=DECIMAL}, #{lat,jdbcType=DECIMAL}, #{activityType,jdbcType=VARCHAR}, 
      #{applicantsNum,jdbcType=INTEGER}, #{state,jdbcType=INTEGER}, #{activityTime,jdbcType=VARCHAR}, 
      #{startTime,jdbcType=VARCHAR}, #{endTime,jdbcType=VARCHAR}, #{isCertified,jdbcType=INTEGER}, 
      #{publisher,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xunqi.pojo.XqActivity" >
    insert into xq_activity
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="activityId != null" >
        activity_id,
      </if>
      <if test="cover != null" >
        cover,
      </if>
      <if test="coverHight != null" >
        cover_hight,
      </if>
      <if test="coverWight != null" >
        cover_wight,
      </if>
      <if test="activityTitle != null" >
        activity_title,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="fullAddress != null" >
        full_address,
      </if>
      <if test="lng != null" >
        lng,
      </if>
      <if test="lat != null" >
        lat,
      </if>
      <if test="activityType != null" >
        activity_type,
      </if>
      <if test="applicantsNum != null" >
        applicants_num,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="activityTime != null" >
        activity_time,
      </if>
      <if test="startTime != null" >
        start_time,
      </if>
      <if test="endTime != null" >
        end_time,
      </if>
      <if test="isCertified != null" >
        is_certified,
      </if>
      <if test="publisher != null" >
        publisher,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="activityId != null" >
        #{activityId,jdbcType=INTEGER},
      </if>
      <if test="cover != null" >
        #{cover,jdbcType=VARCHAR},
      </if>
      <if test="coverHight != null" >
        #{coverHight,jdbcType=VARCHAR},
      </if>
      <if test="coverWight != null" >
        #{coverWight,jdbcType=VARCHAR},
      </if>
      <if test="activityTitle != null" >
        #{activityTitle,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        #{price,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="fullAddress != null" >
        #{fullAddress,jdbcType=VARCHAR},
      </if>
      <if test="lng != null" >
        #{lng,jdbcType=DECIMAL},
      </if>
      <if test="lat != null" >
        #{lat,jdbcType=DECIMAL},
      </if>
      <if test="activityType != null" >
        #{activityType,jdbcType=VARCHAR},
      </if>
      <if test="applicantsNum != null" >
        #{applicantsNum,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="activityTime != null" >
        #{activityTime,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null" >
        #{startTime,jdbcType=VARCHAR},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=VARCHAR},
      </if>
      <if test="isCertified != null" >
        #{isCertified,jdbcType=INTEGER},
      </if>
      <if test="publisher != null" >
        #{publisher,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xunqi.pojo.XqActivityExample" resultType="java.lang.Integer" >
    select count(*) from xq_activity
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update xq_activity
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.activityId != null" >
        activity_id = #{record.activityId,jdbcType=INTEGER},
      </if>
      <if test="record.cover != null" >
        cover = #{record.cover,jdbcType=VARCHAR},
      </if>
      <if test="record.coverHight != null" >
        cover_hight = #{record.coverHight,jdbcType=VARCHAR},
      </if>
      <if test="record.coverWight != null" >
        cover_wight = #{record.coverWight,jdbcType=VARCHAR},
      </if>
      <if test="record.activityTitle != null" >
        activity_title = #{record.activityTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null" >
        price = #{record.price,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null" >
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.fullAddress != null" >
        full_address = #{record.fullAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.lng != null" >
        lng = #{record.lng,jdbcType=DECIMAL},
      </if>
      <if test="record.lat != null" >
        lat = #{record.lat,jdbcType=DECIMAL},
      </if>
      <if test="record.activityType != null" >
        activity_type = #{record.activityType,jdbcType=VARCHAR},
      </if>
      <if test="record.applicantsNum != null" >
        applicants_num = #{record.applicantsNum,jdbcType=INTEGER},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.activityTime != null" >
        activity_time = #{record.activityTime,jdbcType=VARCHAR},
      </if>
      <if test="record.startTime != null" >
        start_time = #{record.startTime,jdbcType=VARCHAR},
      </if>
      <if test="record.endTime != null" >
        end_time = #{record.endTime,jdbcType=VARCHAR},
      </if>
      <if test="record.isCertified != null" >
        is_certified = #{record.isCertified,jdbcType=INTEGER},
      </if>
      <if test="record.publisher != null" >
        publisher = #{record.publisher,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update xq_activity
    set id = #{record.id,jdbcType=INTEGER},
      activity_id = #{record.activityId,jdbcType=INTEGER},
      cover = #{record.cover,jdbcType=VARCHAR},
      cover_hight = #{record.coverHight,jdbcType=VARCHAR},
      cover_wight = #{record.coverWight,jdbcType=VARCHAR},
      activity_title = #{record.activityTitle,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      full_address = #{record.fullAddress,jdbcType=VARCHAR},
      lng = #{record.lng,jdbcType=DECIMAL},
      lat = #{record.lat,jdbcType=DECIMAL},
      activity_type = #{record.activityType,jdbcType=VARCHAR},
      applicants_num = #{record.applicantsNum,jdbcType=INTEGER},
      state = #{record.state,jdbcType=INTEGER},
      activity_time = #{record.activityTime,jdbcType=VARCHAR},
      start_time = #{record.startTime,jdbcType=VARCHAR},
      end_time = #{record.endTime,jdbcType=VARCHAR},
      is_certified = #{record.isCertified,jdbcType=INTEGER},
      publisher = #{record.publisher,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xunqi.pojo.XqActivity" >
    update xq_activity
    <set >
      <if test="activityId != null" >
        activity_id = #{activityId,jdbcType=INTEGER},
      </if>
      <if test="cover != null" >
        cover = #{cover,jdbcType=VARCHAR},
      </if>
      <if test="coverHight != null" >
        cover_hight = #{coverHight,jdbcType=VARCHAR},
      </if>
      <if test="coverWight != null" >
        cover_wight = #{coverWight,jdbcType=VARCHAR},
      </if>
      <if test="activityTitle != null" >
        activity_title = #{activityTitle,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="fullAddress != null" >
        full_address = #{fullAddress,jdbcType=VARCHAR},
      </if>
      <if test="lng != null" >
        lng = #{lng,jdbcType=DECIMAL},
      </if>
      <if test="lat != null" >
        lat = #{lat,jdbcType=DECIMAL},
      </if>
      <if test="activityType != null" >
        activity_type = #{activityType,jdbcType=VARCHAR},
      </if>
      <if test="applicantsNum != null" >
        applicants_num = #{applicantsNum,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="activityTime != null" >
        activity_time = #{activityTime,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null" >
        start_time = #{startTime,jdbcType=VARCHAR},
      </if>
      <if test="endTime != null" >
        end_time = #{endTime,jdbcType=VARCHAR},
      </if>
      <if test="isCertified != null" >
        is_certified = #{isCertified,jdbcType=INTEGER},
      </if>
      <if test="publisher != null" >
        publisher = #{publisher,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xunqi.pojo.XqActivity" >
    update xq_activity
    set activity_id = #{activityId,jdbcType=INTEGER},
      cover = #{cover,jdbcType=VARCHAR},
      cover_hight = #{coverHight,jdbcType=VARCHAR},
      cover_wight = #{coverWight,jdbcType=VARCHAR},
      activity_title = #{activityTitle,jdbcType=VARCHAR},
      price = #{price,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      full_address = #{fullAddress,jdbcType=VARCHAR},
      lng = #{lng,jdbcType=DECIMAL},
      lat = #{lat,jdbcType=DECIMAL},
      activity_type = #{activityType,jdbcType=VARCHAR},
      applicants_num = #{applicantsNum,jdbcType=INTEGER},
      state = #{state,jdbcType=INTEGER},
      activity_time = #{activityTime,jdbcType=VARCHAR},
      start_time = #{startTime,jdbcType=VARCHAR},
      end_time = #{endTime,jdbcType=VARCHAR},
      is_certified = #{isCertified,jdbcType=INTEGER},
      publisher = #{publisher,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="findAll" resultMap="BaseResultMap">
		SELECT * from xq_activity
	</select>
	 <select id="findByAddress" resultMap="BaseResultMap">
		SELECT * from xq_activity where address LIKE  CONCAT(CONCAT('%',#{address,jdbcType=VARCHAR}),'%')
	</select>
	 <select id="findByKeyword" parameterType="com.xunqi.pojo.XqActivity" resultMap="BaseResultMap">
		SELECT * FROM xq_activity WHERE 		
            address LIKE CONCAT(CONCAT('%',#{address,jdbcType=VARCHAR}),'%')      
           and activity_title LIKE  CONCAT(CONCAT('%',#{activityTitle,jdbcType=VARCHAR}),'%')       
	</select>
	<select id="selectByActivityId" resultMap="BaseResultMap" parameterType="java.lang.Integer">
		SELECT * from xq_activity where activity_id = #{activityId,jdbcType=INTEGER} 
	</select>
	
	<select id="findByPs" resultMap="BaseResultMap">
		SELECT * from xq_activity where publisher = #{publisher,jdbcType=VARCHAR} and  state = #{state,jdbcType=INTEGER}
	</select>
	
	<select id="selectByActivityIdList" resultMap="BaseResultMap" parameterType="java.util.List">
    SELECT *
    FROM xq_activity 
    WHERE  activity_id in
    <foreach collection="activityIdList" index="index" item="activityId" open="(" separator="," close=")">
            #{activityId}
        </foreach>     
</select>

<update id="updateApplicantsNumByActivityId" parameterType="com.xunqi.pojo.XqActivity" >
    update xq_activity
    set       
      applicants_num = applicants_num+1     
    where activity_id = #{activityId,jdbcType=INTEGER}
  </update>
</mapper>