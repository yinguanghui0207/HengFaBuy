<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xunqi.mapper.UserAuthMapper" >
  <resultMap id="BaseResultMap" type="com.xunqi.pojo.UserAuth" >
    <id column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="user_truename" property="userTruename" jdbcType="VARCHAR" />
    <result column="user_cardno" property="userCardno" jdbcType="VARCHAR" />
    <result column="card_on" property="cardOn" jdbcType="VARCHAR" />
    <result column="auth_state" property="authState" jdbcType="INTEGER" />
    <result column="fail_massage" property="failMassage" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    user_id, user_truename, user_cardno, card_on, auth_state, fail_massage, create_time, 
    update_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.xunqi.pojo.UserAuthExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user_auth
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from user_auth
    where user_id = #{userId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from user_auth
    where user_id = #{userId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.xunqi.pojo.UserAuthExample" >
    delete from user_auth
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xunqi.pojo.UserAuth" >
    insert into user_auth (user_id, user_truename, user_cardno, 
      card_on, auth_state, fail_massage, 
      create_time, update_time)
    values (#{userId,jdbcType=VARCHAR}, #{userTruename,jdbcType=VARCHAR}, #{userCardno,jdbcType=VARCHAR}, 
      #{cardOn,jdbcType=VARCHAR}, #{authState,jdbcType=INTEGER}, #{failMassage,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.xunqi.pojo.UserAuth" >
    insert into user_auth
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="userTruename != null" >
        user_truename,
      </if>
      <if test="userCardno != null" >
        user_cardno,
      </if>
      <if test="cardOn != null" >
        card_on,
      </if>
      <if test="authState != null" >
        auth_state,
      </if>
      <if test="failMassage != null" >
        fail_massage,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="userTruename != null" >
        #{userTruename,jdbcType=VARCHAR},
      </if>
      <if test="userCardno != null" >
        #{userCardno,jdbcType=VARCHAR},
      </if>
      <if test="cardOn != null" >
        #{cardOn,jdbcType=VARCHAR},
      </if>
      <if test="authState != null" >
        #{authState,jdbcType=INTEGER},
      </if>
      <if test="failMassage != null" >
        #{failMassage,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xunqi.pojo.UserAuthExample" resultType="java.lang.Integer" >
    select count(*) from user_auth
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update user_auth
    <set >
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.userTruename != null" >
        user_truename = #{record.userTruename,jdbcType=VARCHAR},
      </if>
      <if test="record.userCardno != null" >
        user_cardno = #{record.userCardno,jdbcType=VARCHAR},
      </if>
      <if test="record.cardOn != null" >
        card_on = #{record.cardOn,jdbcType=VARCHAR},
      </if>
      <if test="record.authState != null" >
        auth_state = #{record.authState,jdbcType=INTEGER},
      </if>
      <if test="record.failMassage != null" >
        fail_massage = #{record.failMassage,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update user_auth
    set user_id = #{record.userId,jdbcType=VARCHAR},
      user_truename = #{record.userTruename,jdbcType=VARCHAR},
      user_cardno = #{record.userCardno,jdbcType=VARCHAR},
      card_on = #{record.cardOn,jdbcType=VARCHAR},
      auth_state = #{record.authState,jdbcType=INTEGER},
      fail_massage = #{record.failMassage,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xunqi.pojo.UserAuth" >
    update user_auth
    <set >
      <if test="userTruename != null" >
        user_truename = #{userTruename,jdbcType=VARCHAR},
      </if>
      <if test="userCardno != null" >
        user_cardno = #{userCardno,jdbcType=VARCHAR},
      </if>
      <if test="cardOn != null" >
        card_on = #{cardOn,jdbcType=VARCHAR},
      </if>
      <if test="authState != null" >
        auth_state = #{authState,jdbcType=INTEGER},
      </if>
      <if test="failMassage != null" >
        fail_massage = #{failMassage,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where user_id = #{userId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xunqi.pojo.UserAuth" >
    update user_auth
    set user_truename = #{userTruename,jdbcType=VARCHAR},
      user_cardno = #{userCardno,jdbcType=VARCHAR},
      card_on = #{cardOn,jdbcType=VARCHAR},
      auth_state = #{authState,jdbcType=INTEGER},
      fail_massage = #{failMassage,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where user_id = #{userId,jdbcType=VARCHAR}
  </update>
  
  <select id="selectByAuthState" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    *
    from user_auth
   where  auth_state = #{authState,jdbcType=INTEGER}
  </select>
</mapper>