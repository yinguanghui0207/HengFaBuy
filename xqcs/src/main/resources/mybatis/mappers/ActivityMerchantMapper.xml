<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xunqi.mapper.ActivityMerchantMapper" >
  <resultMap id="BaseResultMap" type="com.xunqi.pojo.ActivityMerchant" >
    <id column="merchant_id" property="merchantId" jdbcType="INTEGER" />
    <result column="activity_id" property="activityId" jdbcType="INTEGER" />
    <result column="merchant_no" property="merchantNo" jdbcType="VARCHAR" />
    <result column="merchant_name" property="merchantName" jdbcType="VARCHAR" />
    <result column="legal_name" property="legalName" jdbcType="VARCHAR" />
    <result column="legal_no" property="legalNo" jdbcType="VARCHAR" />
    <result column="business_license" property="businessLicense" jdbcType="VARCHAR" />
    <result column="card_on" property="cardOn" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="fail_massage" property="failMassage" jdbcType="VARCHAR" />
    <result column="merchant_portrait" property="merchantPortrait" jdbcType="VARCHAR" />
    <result column="merchant_phone" property="merchantPhone" jdbcType="VARCHAR" />
    <result column="introduction" property="introduction" jdbcType="VARCHAR" />
    <result column="fans" property="fans" jdbcType="INTEGER" />
    <result column="activity_num" property="activityNum" jdbcType="INTEGER" />
    <result column="auth_time" property="authTime" jdbcType="TIMESTAMP" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    merchant_id, activity_id, merchant_no, merchant_name, legal_name, legal_no, business_license, 
    card_on, state, fail_massage, merchant_portrait, merchant_phone, introduction, fans, 
    activity_num, auth_time, create_time, update_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.xunqi.pojo.ActivityMerchantExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from activity_merchant
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from activity_merchant
    where merchant_id = #{merchantId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from activity_merchant
    where merchant_id = #{merchantId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xunqi.pojo.ActivityMerchantExample" >
    delete from activity_merchant
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xunqi.pojo.ActivityMerchant" >
    insert into activity_merchant (merchant_id, activity_id, merchant_no, 
      merchant_name, legal_name, legal_no, 
      business_license, card_on, state, 
      fail_massage, merchant_portrait, merchant_phone, 
      introduction, fans, activity_num, 
      auth_time, create_time, update_time
      )
    values (#{merchantId,jdbcType=INTEGER}, #{activityId,jdbcType=INTEGER}, #{merchantNo,jdbcType=VARCHAR}, 
      #{merchantName,jdbcType=VARCHAR}, #{legalName,jdbcType=VARCHAR}, #{legalNo,jdbcType=VARCHAR}, 
      #{businessLicense,jdbcType=VARCHAR}, #{cardOn,jdbcType=VARCHAR}, #{state,jdbcType=INTEGER}, 
      #{failMassage,jdbcType=VARCHAR}, #{merchantPortrait,jdbcType=VARCHAR}, #{merchantPhone,jdbcType=VARCHAR}, 
      #{introduction,jdbcType=VARCHAR}, #{fans,jdbcType=INTEGER}, #{activityNum,jdbcType=INTEGER}, 
      #{authTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xunqi.pojo.ActivityMerchant" >
    insert into activity_merchant
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="merchantId != null" >
        merchant_id,
      </if>
      <if test="activityId != null" >
        activity_id,
      </if>
      <if test="merchantNo != null" >
        merchant_no,
      </if>
      <if test="merchantName != null" >
        merchant_name,
      </if>
      <if test="legalName != null" >
        legal_name,
      </if>
      <if test="legalNo != null" >
        legal_no,
      </if>
      <if test="businessLicense != null" >
        business_license,
      </if>
      <if test="cardOn != null" >
        card_on,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="failMassage != null" >
        fail_massage,
      </if>
      <if test="merchantPortrait != null" >
        merchant_portrait,
      </if>
      <if test="merchantPhone != null" >
        merchant_phone,
      </if>
      <if test="introduction != null" >
        introduction,
      </if>
      <if test="fans != null" >
        fans,
      </if>
      <if test="activityNum != null" >
        activity_num,
      </if>
      <if test="authTime != null" >
        auth_time,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="merchantId != null" >
        #{merchantId,jdbcType=INTEGER},
      </if>
      <if test="activityId != null" >
        #{activityId,jdbcType=INTEGER},
      </if>
      <if test="merchantNo != null" >
        #{merchantNo,jdbcType=VARCHAR},
      </if>
      <if test="merchantName != null" >
        #{merchantName,jdbcType=VARCHAR},
      </if>
      <if test="legalName != null" >
        #{legalName,jdbcType=VARCHAR},
      </if>
      <if test="legalNo != null" >
        #{legalNo,jdbcType=VARCHAR},
      </if>
      <if test="businessLicense != null" >
        #{businessLicense,jdbcType=VARCHAR},
      </if>
      <if test="cardOn != null" >
        #{cardOn,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="failMassage != null" >
        #{failMassage,jdbcType=VARCHAR},
      </if>
      <if test="merchantPortrait != null" >
        #{merchantPortrait,jdbcType=VARCHAR},
      </if>
      <if test="merchantPhone != null" >
        #{merchantPhone,jdbcType=VARCHAR},
      </if>
      <if test="introduction != null" >
        #{introduction,jdbcType=VARCHAR},
      </if>
      <if test="fans != null" >
        #{fans,jdbcType=INTEGER},
      </if>
      <if test="activityNum != null" >
        #{activityNum,jdbcType=INTEGER},
      </if>
      <if test="authTime != null" >
        #{authTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xunqi.pojo.ActivityMerchantExample" resultType="java.lang.Integer" >
    select count(*) from activity_merchant
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update activity_merchant
    <set >
      <if test="record.merchantId != null" >
        merchant_id = #{record.merchantId,jdbcType=INTEGER},
      </if>
      <if test="record.activityId != null" >
        activity_id = #{record.activityId,jdbcType=INTEGER},
      </if>
      <if test="record.merchantNo != null" >
        merchant_no = #{record.merchantNo,jdbcType=VARCHAR},
      </if>
      <if test="record.merchantName != null" >
        merchant_name = #{record.merchantName,jdbcType=VARCHAR},
      </if>
      <if test="record.legalName != null" >
        legal_name = #{record.legalName,jdbcType=VARCHAR},
      </if>
      <if test="record.legalNo != null" >
        legal_no = #{record.legalNo,jdbcType=VARCHAR},
      </if>
      <if test="record.businessLicense != null" >
        business_license = #{record.businessLicense,jdbcType=VARCHAR},
      </if>
      <if test="record.cardOn != null" >
        card_on = #{record.cardOn,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.failMassage != null" >
        fail_massage = #{record.failMassage,jdbcType=VARCHAR},
      </if>
      <if test="record.merchantPortrait != null" >
        merchant_portrait = #{record.merchantPortrait,jdbcType=VARCHAR},
      </if>
      <if test="record.merchantPhone != null" >
        merchant_phone = #{record.merchantPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.introduction != null" >
        introduction = #{record.introduction,jdbcType=VARCHAR},
      </if>
      <if test="record.fans != null" >
        fans = #{record.fans,jdbcType=INTEGER},
      </if>
      <if test="record.activityNum != null" >
        activity_num = #{record.activityNum,jdbcType=INTEGER},
      </if>
      <if test="record.authTime != null" >
        auth_time = #{record.authTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update activity_merchant
    set merchant_id = #{record.merchantId,jdbcType=INTEGER},
      activity_id = #{record.activityId,jdbcType=INTEGER},
      merchant_no = #{record.merchantNo,jdbcType=VARCHAR},
      merchant_name = #{record.merchantName,jdbcType=VARCHAR},
      legal_name = #{record.legalName,jdbcType=VARCHAR},
      legal_no = #{record.legalNo,jdbcType=VARCHAR},
      business_license = #{record.businessLicense,jdbcType=VARCHAR},
      card_on = #{record.cardOn,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=INTEGER},
      fail_massage = #{record.failMassage,jdbcType=VARCHAR},
      merchant_portrait = #{record.merchantPortrait,jdbcType=VARCHAR},
      merchant_phone = #{record.merchantPhone,jdbcType=VARCHAR},
      introduction = #{record.introduction,jdbcType=VARCHAR},
      fans = #{record.fans,jdbcType=INTEGER},
      activity_num = #{record.activityNum,jdbcType=INTEGER},
      auth_time = #{record.authTime,jdbcType=TIMESTAMP},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xunqi.pojo.ActivityMerchant" >
    update activity_merchant
    <set >
      <if test="activityId != null" >
        activity_id = #{activityId,jdbcType=INTEGER},
      </if>
      <if test="merchantNo != null" >
        merchant_no = #{merchantNo,jdbcType=VARCHAR},
      </if>
      <if test="merchantName != null" >
        merchant_name = #{merchantName,jdbcType=VARCHAR},
      </if>
      <if test="legalName != null" >
        legal_name = #{legalName,jdbcType=VARCHAR},
      </if>
      <if test="legalNo != null" >
        legal_no = #{legalNo,jdbcType=VARCHAR},
      </if>
      <if test="businessLicense != null" >
        business_license = #{businessLicense,jdbcType=VARCHAR},
      </if>
      <if test="cardOn != null" >
        card_on = #{cardOn,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="failMassage != null" >
        fail_massage = #{failMassage,jdbcType=VARCHAR},
      </if>
      <if test="merchantPortrait != null" >
        merchant_portrait = #{merchantPortrait,jdbcType=VARCHAR},
      </if>
      <if test="merchantPhone != null" >
        merchant_phone = #{merchantPhone,jdbcType=VARCHAR},
      </if>
      <if test="introduction != null" >
        introduction = #{introduction,jdbcType=VARCHAR},
      </if>
      <if test="fans != null" >
        fans = #{fans,jdbcType=INTEGER},
      </if>
      <if test="activityNum != null" >
        activity_num = #{activityNum,jdbcType=INTEGER},
      </if>
      <if test="authTime != null" >
        auth_time = #{authTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where merchant_id = #{merchantId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xunqi.pojo.ActivityMerchant" >
    update activity_merchant
    set activity_id = #{activityId,jdbcType=INTEGER},
      merchant_no = #{merchantNo,jdbcType=VARCHAR},
      merchant_name = #{merchantName,jdbcType=VARCHAR},
      legal_name = #{legalName,jdbcType=VARCHAR},
      legal_no = #{legalNo,jdbcType=VARCHAR},
      business_license = #{businessLicense,jdbcType=VARCHAR},
      card_on = #{cardOn,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      fail_massage = #{failMassage,jdbcType=VARCHAR},
      merchant_portrait = #{merchantPortrait,jdbcType=VARCHAR},
      merchant_phone = #{merchantPhone,jdbcType=VARCHAR},
      introduction = #{introduction,jdbcType=VARCHAR},
      fans = #{fans,jdbcType=INTEGER},
      activity_num = #{activityNum,jdbcType=INTEGER},
      auth_time = #{authTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where merchant_id = #{merchantId,jdbcType=INTEGER}
  </update>
  
  <select id="selectByState" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
   	*
    from activity_merchant
    where state = #{state,jdbcType=INTEGER}
  </select>
</mapper>